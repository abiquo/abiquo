<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<mx:VBox 
    width="100%" height="100%"
    paddingBottom="5"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="5"
    verticalGap="-1"
    creationComplete="onCreationComplete()"
    xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Script>
        <![CDATA[
        	import net.undf.abicloud.vo.virtualappliance.VirtualDataCenter;
        	import net.undf.abicloud.vo.virtualappliance.VirtualAppliance;
        	import net.undf.abicloud.utils.AbicloudUtils;
            import mx.collections.ArrayCollection;

            import net.undf.abicloud.events.NetworkingEvent;
            import net.undf.abicloud.model.AbiCloudModel;
            import net.undf.abicloud.vo.infrastructure.VirtualMachine;

            //List of IPPoolManagement containing the NICs that the VirtualMachine currently has
            [Bindable]
            protected var virtualMachineNICs:ArrayCollection;

            //The VirtualDatacenter 
            protected var _virtualDatacenter:VirtualDataCenter;

            public function set virtualDatacenter(value:VirtualDataCenter):void
            {
                _virtualDatacenter = value;
            }
            
            //The VirtualAppliance
            protected var _virtualAppliance:VirtualAppliance;

            public function set virtualAppliance(value:VirtualAppliance):void
            {
                _virtualAppliance = value;
            }
            
            //The VirtualMachine to list its NICs
            protected var _virtualMachine:VirtualMachine;

            public function set virtualMachine(value:VirtualMachine):void
            {
                _virtualMachine = value;
                requestVirtualMachineNICs();
            }

            private function onCreationComplete():void
            {
                //Listening for updated from Model
                AbiCloudModel.getInstance().networkingManager.addEventListener(NetworkingEvent.VIRTUAL_MACHINE_NICs_CHANGED,
                                                                               onVirtualMachineNICsChanged);
            }

            protected function requestVirtualMachineNICs():void
            {
                if (_virtualMachine && _virtualAppliance && _virtualDatacenter)
                {
                    var event:NetworkingEvent = new NetworkingEvent(NetworkingEvent.GET_NICs_BY_VIRTUAL_MACHINE);
                    event.virtualDatacenter = _virtualDatacenter;
                    event.virtualAppliance = _virtualAppliance; 
                    event.virtualMachine = _virtualMachine;
                    event.callback = setVirtualMachineNICs; 
                    dispatchEvent(event);
                }
                else
                {
                    virtualMachineNICs = new ArrayCollection();
                }
            }

            public function setVirtualMachineNICs(list:ArrayCollection):void
            {
                virtualMachineNICs = list;
            }

            private function onVirtualMachineNICsChanged(event:NetworkingEvent):void
            {
                requestVirtualMachineNICs();
            }
            
            private function returnMac(object:Object, column:DataGridColumn):String{
            	return AbicloudUtils.formatMac(object.mac);
            }
        ]]>
    </mx:Script>

    <mx:DataGrid id="virtualMachineNICsDataGrid"
        width="100%" height="100%"
        dataProvider="{virtualMachineNICs}"
        sortableColumns="false">

        <mx:columns>
            <mx:DataGridColumn headerText="@Resource(bundle='Networking', key='LABEL_IP_ADDRESS')"
                dataField="ip"/>
            <mx:DataGridColumn headerText="@Resource(bundle='Networking', key='LABEL_MAC')"
            	labelFunction="returnMac"
                dataField="mac"/>
            <mx:DataGridColumn headerText="@Resource(bundle='Networking', key='LABEL_VLAN')"
                dataField="vlanNetworkName"/>
        </mx:columns>
    </mx:DataGrid>
</mx:VBox>
