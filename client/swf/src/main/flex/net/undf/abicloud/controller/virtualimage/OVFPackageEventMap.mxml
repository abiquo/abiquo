<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<EventMap 
    xmlns="http://mate.asfusion.com/"
    xmlns:mx="http://www.adobe.com/2006/mxml">

    <mx:Script>
        <![CDATA[
            import net.undf.abicloud.business.Services;
            import net.undf.abicloud.controller.FaultHandler;
            import net.undf.abicloud.events.virtualimage.OVFPackageEvent;
            import net.undf.abicloud.model.AbiCloudModel;
            import net.undf.abicloud.utils.ScreenBlocker;

            [Bindable]
            private var services:Services = new Services();
        ]]>
    </mx:Script>

    <!-- ********************************************************************************************************************* -->
    <!-- OVFPackageEvent.GET_OVF_PACKAGE_LIST_NAMES ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.GET_OVF_PACKAGE_LIST_NAMES}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getOVFPackageListName"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleGetOVFPackageListNames"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.GET_OVF_PACKAGE_LIST ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.GET_OVF_PACKAGE_LIST}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getOVFPackageList"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id, event.ovfPackageList.name]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleGetOVFPackageList"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.CREATE_OVF_PACKAGE_LIST ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.CREATE_OVF_PACKAGE_LIST}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="createOVFPackageList"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id, event.ovfPackageList.url]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleCreateOVFPackageList"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.DELETE_OVF_PACKAGE_LIST ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.DELETE_OVF_PACKAGE_LIST}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="deleteOVFPackageList"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id, event.ovfPackageList.name]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleDeleteOVFPackageList"
                    arguments="{[resultObject, event.ovfPackageList]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.REFRESH_OVF_PACKAGE_LIST ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.REFRESH_OVF_PACKAGE_LIST}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="refreshOVFPackageList"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id, event.ovfPackageList.name]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleRefreshOVFPackageList"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.GET_OVF_PACKAGE_LIST_STATUS ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.GET_OVF_PACKAGE_LIST_STATUS}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getOVFPackageListStatus"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, 
            event.ovfPackageList.name, 
            event.enterprise.id, 
            event.repository.datacenter.id]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleGetOVFPackageStatus"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.START_DOWNLOAD_OVF_PACKAGE ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.START_DOWNLOAD_OVF_PACKAGE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="startDownloadOVFPackage"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, 
            event.ovfPackageURLList, 
            event.enterprise.id, 
            event.repository.datacenter.id]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleStartDownloadOVFPackage"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.REFRESH_OVF_PACKAGE_STATUS ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.REFRESH_OVF_PACKAGE_STATUS}">
        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="refreshOVFPackageStatus"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, 
            event.ovfPackageURLList, 
            event.enterprise.id, 
            event.repository.datacenter.id]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleRefreshOVFPackageStatus"
                    arguments="{[resultObject]}"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- OVFPackageEvent.CANCEL_DOWNLOAD_OVF_PACKAGE ________________________________________________________________________ -->
    <EventHandlers type="{OVFPackageEvent.CANCEL_DOWNLOAD_OVF_PACKAGE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="cancelDownloadOVFPackage"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, 
            event.ovfPackage.url, 
            event.enterprise.id, 
            event.repository.datacenter.id]}">

            <resultHandlers>
                <MethodInvoker generator="{OVFPackageResultHandler}"
                    method="handleCancelDownloadOVFPackage"
                    arguments="{[resultObject, event.ovfPackage]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>
</EventMap>
