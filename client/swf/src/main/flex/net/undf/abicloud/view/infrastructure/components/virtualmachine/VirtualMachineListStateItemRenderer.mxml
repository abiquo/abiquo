<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->


<!--
     User by Datagrid in VirtualMachineList component, to display the sate of a VirtualMachine
-->
<mx:HBox 
    width="12" height="13"
    horizontalAlign="center"
    verticalAlign="middle"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:utils="net.undf.abicloud.utils.*">
    <mx:Script>
        <![CDATA[
            import net.undf.abicloud.vo.infrastructure.VirtualMachine;
            import net.undf.abicloud.vo.infrastructure.State;

            [Bindable]
            private var _virtualMachine:VirtualMachine;

            override public function set data(value:Object):void
            {
                this._virtualMachine = value as VirtualMachine;
            }
        ]]>
    </mx:Script>
    <utils:SmoothImage 
        width="14" height="14"
        includeInLayout="{this._virtualMachine.state.description != State.LOCKED.description}"
        source="{(this._virtualMachine.state.description == State.ON.description) ? StyleManager.getStyleDeclaration('.VirtualMachineStateRunning').getStyle('source') : 
   								((this._virtualMachine.state.description == State.PAUSED.description) ? StyleManager.getStyleDeclaration('.VirtualMachineStatePaused').getStyle('source') : StyleManager.getStyleDeclaration('.VirtualMachineStateStopped').getStyle('source'))}"
        visible="{this._virtualMachine.state.description != State.LOCKED.description}"/>

    <mx:SWFLoader 
        width="14" height="14"
        includeInLayout="{this._virtualMachine.state.description == State.LOCKED.description}"
        source="{StyleManager.getStyleDeclaration('.VirtualMachineLoadingIcon').getStyle('source')}"
        visible="{this._virtualMachine.state.description == State.LOCKED.description}"/>
</mx:HBox>
