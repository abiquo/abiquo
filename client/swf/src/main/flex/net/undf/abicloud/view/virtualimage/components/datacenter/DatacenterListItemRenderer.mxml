<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<mx:VBox 
    width="100%"
    backgroundAlpha="0"
    paddingBottom="{expanded ? 6:0}"
    verticalGap="0"
    creationComplete="onCreationComplete()"
    xmlns:mx="http://www.adobe.com/2006/mxml">

    <mx:Script>
        <![CDATA[
        	import net.undf.abicloud.view.virtualimage.VirtualImageManagement;
            import mx.binding.utils.ChangeWatcher;
            import mx.containers.ViewStack;
            import mx.controls.List;
            import mx.core.Container;
            import mx.events.TweenEvent;

            import net.undf.abicloud.model.AbiCloudModel;
            import net.undf.abicloud.view.general.GeneralToggledContainer;
            import net.undf.abicloud.vo.infrastructure.DataCenter;

            [Bindable]
            private var expanded:Boolean = false;

            [Bindable]
            private var datacenter:DataCenter;

            private function onCreationComplete():void
            {
                ChangeWatcher.watch(this.owner, "selectedItem", onListSelectedItemChange);
            }

            private function onListSelectedItemChange(event:Event):void
            {
                if (datacenter && List(this.owner).selectedItem == datacenter)
                {
                    expanded = true;
                }
                else
                {
                    expanded = false;
                }
            }

            override public function set data(value:Object):void
            {
                super.data = value;

                datacenter = value as DataCenter;
                if (datacenter && List(this.owner).selectedItem == datacenter)
                {
                    expanded = true;
                }
                else
                {
                    expanded = false;
                }
            }
            
            private function onClickRefreshLogButton(event:MouseEvent):void
            {
            	event.stopImmediatePropagation();
            	VirtualImageManagement(parentDocument).onClickDatacenterList(true);
            }
        ]]>
    </mx:Script>

    <mx:Label text="{datacenter.name}" fontWeight="bold"/>

    <mx:Form 
        width="100%"
		styleName="DataCenterListItemRendererForm1"
		verticalScrollPolicy="off"
		horizontalScrollPolicy="off"
        includeInLayout="{expanded &amp;&amp; AbiCloudModel.getInstance().virtualImageManager.repository.repositoryCapacityMb != 0 }"
        verticalGap="-3"
        visible="{expanded &amp;&amp; AbiCloudModel.getInstance().virtualImageManager.repository.repositoryCapacityMb != 0}">

        <mx:FormItem label="@Resource(bundle='Networking', key='LABEL_CAPACITY')">
            <mx:Label text="{AbiCloudModel.getInstance().virtualImageManager.repository == null ? '-' :
					  																			  ((AbiCloudModel.getInstance().virtualImageManager.repository.repositoryCapacityMb / AbiCloudModel.GB_TO_MBYTES).toFixed(2) + ' GB')}"/>
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='Networking', key='LABEL_REMAINING')" direction="horizontal">
            <mx:Label text="{AbiCloudModel.getInstance().virtualImageManager.repository == null ? '-' :
					  																			  ((AbiCloudModel.getInstance().virtualImageManager.repository.repositoryRemainingMb / AbiCloudModel.GB_TO_MBYTES).toFixed(2) + ' GB')}"/>
            <mx:Button id="refreshLogButton"
                    styleName="RefreshButton"
                    toolTip="@Resource(bundle='VirtualAppliance', key='TOOLTIP_REFRESH_LOG_BUTTON')"
                    click="onClickRefreshLogButton(event)"/>					  																			  
        </mx:FormItem>
    </mx:Form>
    <mx:Text width="100%"
    	paddingTop="5"
    	includeInLayout="{expanded &amp;&amp; AbiCloudModel.getInstance().virtualImageManager.repository.repositoryCapacityMb == 0 }"
        visible="{expanded &amp;&amp; AbiCloudModel.getInstance().virtualImageManager.repository.repositoryCapacityMb == 0}"
    	text="@Resource(bundle='Networking', key='LABEL_NFS_DOWN')"/>
</mx:VBox>
