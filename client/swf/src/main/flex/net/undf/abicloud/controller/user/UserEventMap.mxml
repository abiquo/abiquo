<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<EventMap 
    xmlns="http://mate.asfusion.com/"
    xmlns:mx="http://www.adobe.com/2006/mxml">


    <mx:Script>
        <![CDATA[
            import net.undf.abicloud.business.Services;
            import net.undf.abicloud.controller.FaultHandler;
            import net.undf.abicloud.events.*;
            import net.undf.abicloud.model.AbiCloudModel;
            import net.undf.abicloud.utils.ScreenBlocker;

            [Bindable]
            private var services:Services = new Services();
        ]]>
    </mx:Script>


    <!-- ********************************************************************************************************************* -->
    <!-- UserEvent.GET_USERS ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.GET_USERS}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="getUsers"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.userListOptions]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleGetUsers"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- UserEvent.ADD_USER ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.CREATE_USER}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="createUser"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.user]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleCreateUser"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>
    
    <!-- UserEvent.CHECK_ROLE_PRIVILEGE ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.CHECK_ROLE_PRIVILEGE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="checkRolePrivilege"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.role.id, event.privilege]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleCheckRolePrivilege"
                    arguments="{[resultObject, event.callback]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>
    </EventHandlers> 
    
    <!-- UserEvent.CHECK_ROLE_ACCESS ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.CHECK_ROLE_ACCESS}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="checkRoleAccess"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.role.id]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleCheckRoleAccess"
                    arguments="{[resultObject, event.callback]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>
    </EventHandlers>     



    <!-- UserEvent.DELETE_USER ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.DELETE_USER}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="deleteUser"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.user]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleDeleteUser"
                    arguments="{[resultObject, event.user]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- UserEvent.EDIT_USER ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.EDIT_USERS}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="editUser"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.users]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleEditUser"
                    arguments="{[resultObject, event.oldUsers, event.users]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>
    
    <!-- UserEvent.GET_ROLES ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.GET_ROLES}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="getRoles"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.roleListOptions, event.enterprise]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleGetRoles"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>
    </EventHandlers> 


    <!-- UserEvent.CLOSE_SESSION_USERS ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.CLOSE_SESSION_USERS}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="closeSessionUsers"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.users]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleCloseSessionUsers"
                    arguments="{[resultObject, event.oldUsers]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- ********************************************************************************************************************* -->

    <!-- UserEvent.GET_ENTERPRISES ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.GET_ENTERPRISES}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="getEnterprises"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.listRequest]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleGetEnterprises"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>
    
    <!-- UserEvent.GET_ENTERPRISE ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.GET_ENTERPRISE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="getEnterprise"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleGetEnterprise"
                    arguments="{[resultObject, event.callback]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- UserEvent.CREATE_ENTERPRISE ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.CREATE_ENTERPRISE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="createEnterprise"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleCreateEnterprise"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- UserEvent.EDIT_ENTERPRISE ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.EDIT_ENTERPRISE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="editEnterprise"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleEditEnterprise"
                    arguments="{[resultObject, event.oldEnterprise, event.enterprise]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- UserEvent.DELETE_ENTERPRISE ________________________________________________________________________ -->
    <EventHandlers type="{UserEvent.DELETE_ENTERPRISE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.userService}"
            method="deleteEnterprise"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise]}">

            <resultHandlers>
                <MethodInvoker generator="{UserResultHandler}"
                    method="handleDeleteEnterprise"
                    arguments="{[resultObject, event.enterprise]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>
</EventMap>
