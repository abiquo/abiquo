<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<mx:Canvas 
    styleName="GeneralToggledContainer" horizontalScrollPolicy="off"
    verticalScrollPolicy="off"
    xmlns:mx="http://www.adobe.com/2006/mxml">

    <mx:Script>
        <![CDATA[
            import mx.core.Container;

            /**
             * Method to add a new child to GeneralToggledContainer.
             * This child will be placed inside the viewstack,
             * and will be accesed via the toggle button bar
             *
             * Do not use addChild or addChildAt, since the child will
             * not be placed inside the ViewStack, and a ViewStack only
             * accepts components that extends from Container class
             */
            public function addContent(content:Container, label:String = "Untitled", index:int = -1):void
            {
                content.label = label;
                if(index == -1){
	                viewStack.addChild(content);
                }else{
                	viewStack.addChildAt(content,index);
                }
            }

            private var _selectedIndex:int = 0;

            [Bindable(event="selectedIndexChange")]
            public function get selectedIndex():int
            {
                return this._selectedIndex;
            }

            public function set selectedIndex(value:int):void
            {
                this._selectedIndex = value;
                dispatchEvent(new Event("selectedIndexChange"));
            }
        ]]>
    </mx:Script>

    <!-- Where the content will be placed -->
    <mx:Box 
        left="0" right="0" top="19" bottom="0"
        paddingBottom="0"
        paddingLeft="0"
        paddingRight="0"
        paddingTop="0"
        styleName="GeneralToggleContainerVS">
        <mx:ViewStack id="viewStack"
            width="100%" height="100%"
            paddingBottom="10"
            paddingLeft="10"
            paddingRight="10"
            paddingTop="5"
            horizontalScrollPolicy="off" verticalScrollPolicy="off"
            selectedIndex="{selectedIndex}"
            resizeToContent="true"/>
    </mx:Box>


    <!-- Button bar to switch between content -->
    <mx:TabBar id="tabBar"
        height="20"
        left="0" top="0"
        styleName="GeneralToggleContainerTabBar" dataProvider="{viewStack}"/>
</mx:Canvas>
