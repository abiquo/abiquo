<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<EventMap 
    xmlns="http://mate.asfusion.com/"
    xmlns:mx="http://www.adobe.com/2006/mxml">


    <mx:Script>
        <![CDATA[
            import mx.rpc.remoting.mxml.RemoteObject;

            import net.undf.abicloud.business.Services;
            import net.undf.abicloud.business.managers.LoginManager;
            import net.undf.abicloud.controller.FaultHandler;
            import net.undf.abicloud.events.*;
            import net.undf.abicloud.events.virtualimage.OVFPackageEvent;
            import net.undf.abicloud.events.virtualimage.VirtualImageEvent;
            import net.undf.abicloud.model.AbiCloudModel;
            import net.undf.abicloud.utils.ScreenBlocker;
            import net.undf.abicloud.vo.authentication.Session;

            [Bindable]
            private var services:Services = new Services();
        ]]>
    </mx:Script>

    <!-- ********************************************************************************************************************* -->
    <!-- VirtualImageEvent.GET_DISK_FORMAT_TYPES ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.GET_DISK_FORMAT_TYPES}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getDiskFormatTypes"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleGetDiskFormatTypes"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- ********************************************************************************************************************* -->
    <!-- VirtualImageEvent.GET_DATACENTER_REPOSITORY ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.GET_DATACENTER_REPOSITORY}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getDatacenterRepository"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.datacenter.id, event.enterprise.id]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleGetDatacenterRepository"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- ********************************************************************************************************************* -->
    <!-- VirtualImageEvent.GET_CATEGORIES ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.GET_CATEGORIES}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getCategories"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleGetCategories"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- VirtualImageEvent.CREATE_CATEGORY ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.CREATE_CATEGORY}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="createCategory"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.category.name]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleCreateCategory"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- VirtualImageEvent.DELETE_CATEGORY ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.DELETE_CATEGORY}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="deleteCategory"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.category.id]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleDeleteCategory"
                    arguments="{[resultObject, event.category]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>



    <!-- ********************************************************************************************************************* -->
    <!-- VirtualImageEvent.GET_ICONS ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.GET_ICONS}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getIcons"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleGetIcons"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- VirtualImageEvent.CREATE_ICON ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.CREATE_ICON}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="createIcon"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.icon]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleCreateIcon"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- VirtualImageEvent.DELETE_ICON ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.DELETE_ICON}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="deleteIcon"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.icon.id]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleDeleteIcon"
                    arguments="{[resultObject, event.icon]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- VirtualImageEvent.EDIT_ICON ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.EDIT_ICON}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="editIcon"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.icon]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleEditIcon"
                    arguments="{[resultObject, event.icon]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ********************************************************************************************************************* -->
    <!-- VirtualImageEvent.GET_VIRTUAL_IMAGES_BY_CATEGORY __________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.GET_VIRTUAL_IMAGES_BY_CATEGORY}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getVirtualImageByCategory"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id, event.repository.id, event.category.id]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleGetVirtualImagesByCategory"
                    arguments="{[resultObject, event.callback]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- VirtualImageEvent.GET_VIRTUAL_IMAGES_BY_CATEGORY __________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.GET_VIRTUAL_IMAGES_BY_CATEGORY_AND_HYPERVISOR_TYPE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="getVirtualImageByCategoryAndHypervisorCompatible"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.enterprise.id, event.repository.id, event.category.id, event.hypervisorType.id]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleGetVirtualImagesByCategory"
                    arguments="{[resultObject, event.callback]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- VirtualImageEvent.EDIT_VIRTUAL_IMAGE ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.EDIT_VIRTUAL_IMAGE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="editVirtualImage"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.viUpdatedValues]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleEditVirtualImage"
                    arguments="{[resultObject, event.virtualImage, event.viUpdatedValues]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- VirtualImageEvent.DELETE_VIRTUAL_IMAGE ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.DELETE_VIRTUAL_IMAGE}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="deleteVirtualImage"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.virtualImage.id]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleDeleteVirtualImage"
                    arguments="{[resultObject, event.virtualImage]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- VirtualImageEvent.CHECK_VIRTUAL_IMAGE_UPLOAD_PROGRESS ________________________________________________________________________ -->
    <EventHandlers type="{VirtualImageEvent.CHECK_VIRTUAL_IMAGE_UPLOAD_PROGRESS}">

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.appsLibraryService}"
            method="refreshOVFPackageInstanceStatus"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.ovfInstanceId, event.enterprise.id, event.repository.id]}">

            <resultHandlers>
                <MethodInvoker generator="{VirtualImageResultHandler}"
                    method="handleCheckVirtualImageUploadProgress"
                    arguments="{[resultObject, event.callback]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

</EventMap>
