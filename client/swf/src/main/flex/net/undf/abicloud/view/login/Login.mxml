<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<mx:VBox 
    width="225"
    horizontalAlign="center"
    verticalAlign="middle"
    verticalGap="11"
    creationPolicy="all" verticalScrollPolicy="off" horizontalScrollPolicy="off"
    styleName="MainLoginStyle"
    creationComplete="onCreationComplete()"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:utils="net.undf.abicloud.utils.*"
    visible="false"
    >


    <!-- ********************************************************

         Login component for login process


         ********************************************************* -->


    <mx:Script>
        <![CDATA[
        	import mx.controls.Alert;
        	import net.undf.abicloud.controller.ThemeHandler;
        	import net.undf.abicloud.model.AbiCloudModel;
        	import net.undf.abicloud.business.managers.LoginManager;
        	import net.undf.abicloud.utils.AbicloudUtils;
            import com.adobe.crypto.MD5;
            
            import mx.events.ValidationResultEvent;
            import mx.resources.ResourceBundle;
            import mx.resources.ResourceManager;
            import mx.validators.ValidationResult;
            
            import net.undf.abicloud.events.LoginEvent;
            import net.undf.abicloud.view.general.AbiCloudAlert;
            import net.undf.abicloud.vo.authentication.Login;

            [ResourceBundle("Login")]
            private var rb:ResourceBundle;

            [ResourceBundle("Common")]
            private var rb2:ResourceBundle;

            [Bindable]
            private var languageDP:Array = [ { label: "English", data: "en_US" },
                                             { label: "Español", data: "es_ES" },
                                             { label: "日本語", data: "ja_JP" },
                                             { label: "中文", data: "zh_ZH" },
                                             { label: "Português", data: "pt_PT" }
                                              ];

            [Bindable]
            private var _loginLogo:String;
            
            private var pendingLocaleChange:String;

            public function set loginLogo(value:String):void
            {
                this._loginLogo = value;
            }

            private function onCreationComplete():void
            {
                this.addEventListener(KeyboardEvent.KEY_UP, checkEnter);
            }

            public function init():void
            {
                //Checking for SharedObject presence
                var so:SharedObject = SharedObject.getLocal("AbiCloudSO");

                if (so.data.user != null)
                {
                    tiUsuario.text = so.data.user;
                    tiPasswd.text = so.data.pass;
                    cbAutoLogin.selected = true;
                }

                //Checking for SharedObject with locale info
                var so2:SharedObject = SharedObject.getLocal("AbiCloudSOLocale");
                if (so2.data.localeIndex != null)
                {
                	setLanguage( languageDP[so2.data.localeIndex].data );
                    languageCombo.prompt = languageDP[so2.data.localeIndex].label;
                }
                else
                {
                    //Setting default language: English
                    setLanguage( languageDP[0].data );
                    languageCombo.prompt = languageDP[0].label;
                }

				trace("[Login] Set locale chain : " + ResourceManager.getInstance().localeChain);

                //Setting AbiCloudAlert buttons language
                AbiCloudAlert.okLabel = ResourceManager.getInstance().getString("Common",
                                                                                "ALERT_ACCEPT_LABEL");
                AbiCloudAlert.cancelLabel = ResourceManager.getInstance().getString("Common",
                                                                                    "ALERT_CANCEL_LABEL");
                AbiCloudAlert.yesLabel = ResourceManager.getInstance().getString("Common",
                                                                                 "ALERT_YES_LABEL");
                AbiCloudAlert.noLabel = ResourceManager.getInstance().getString("Common",
                                                                                "ALERT_NO_LABEL");
				

                tiUsuario.setFocus();

            }

            private function checkEnter(event:KeyboardEvent):void
            {
                if (event.keyCode == Keyboard.ENTER)
                    login();
            }

            
            
            /**
             * Return the selected language passed in the URL if proceed 
             **/
            public function returnLanguage(language:String):String{
            	var indexLanguage:int = AbiCloudModel.getInstance().loginManager.returnLanguageIndex(languageDP,language);
            	if(indexLanguage != -1){
            		return languageDP[indexLanguage].data;
            	}
                return "en_US";    
            }
            
            /**
             * Starts login process
             **/
            private function login():void
            {
                //Notifying that user wants to log in
                autoLogin();

                var loginInfo:net.undf.abicloud.vo.authentication.Login = new net.undf.abicloud.vo.authentication.Login();
                loginInfo.user = tiUsuario.text;
                loginInfo.password = tiPasswd.text; // MD5.hash()
                loginInfo.locale = ResourceManager.getInstance().localeChain[0];

                var event:LoginEvent = new LoginEvent(LoginEvent.LOGIN);
                event.login = loginInfo;
                dispatchEvent(event);

                //Clear fields
                tiUsuario.text = "";
                tiPasswd.text = "";
            }

            /**
             * Saves login information in user's computer
             **/
            private function autoLogin():void
            {
                var so:SharedObject = SharedObject.getLocal("AbiCloudSO");

                if (cbAutoLogin.selected)
                {
                    so.data.user = tiUsuario.text;
                    so.data.pass = tiPasswd.text;
                }
                else
                {
                    so.clear();
                }
                so.flush();
            }

            public function onChangeLanguage():void
            {
                if (languageCombo.selectedIndex > -1)
                {
                    //Setting the language selected by the user
                    setLanguage( languageCombo.selectedItem.data );

                    //Setting AbiCloudAlert buttons language
                    AbiCloudAlert.okLabel = ResourceManager.getInstance().getString("Common",
                                                                                    "ALERT_ACCEPT_LABEL");
                    AbiCloudAlert.cancelLabel = ResourceManager.getInstance().getString("Common",
                                                                                        "ALERT_CANCEL_LABEL");
                    AbiCloudAlert.yesLabel = ResourceManager.getInstance().getString("Common",
                                                                                     "ALERT_YES_LABEL");
                    AbiCloudAlert.noLabel = ResourceManager.getInstance().getString("Common",
                                                                                    "ALERT_NO_LABEL");

                    //Saving the language in a Shared Object
                    var so:SharedObject = SharedObject.getLocal("AbiCloudSOLocale");
                    so.data.localeIndex = languageCombo.selectedIndex;
                }
            }
            /* FORGOT PASSWORD TEMPORALLY DISABLED
               private function errorMail():void
               {
               var mensaje:Message = new Message();
               mensaje.type = Message.TYPE_ERROR;
               mensaje.title = "Error en el formulario";
               mensaje.subTitle = "Atención";
               mensaje.message = "Revisa el campo email.";
               mensaje.button1Label = "Aceptar";
               mensaje.button1ClickHandler = mensaje.close;
               mensaje.show();
               }

               private function enviarContrasenya():void
               {
               var recordarContrasenaEvt:RecordarContrasenaEvent = new RecordarContrasenaEvent();

               recordarContrasenaEvt.usuario = tiEmailRecordar.text;
               recordarContrasenaEvt.email = tiEmailRecordar.text;

               recordarContrasenaEvt.callBack = resultRecordarContrasena;

               recordarContrasenaEvt.dispatch();
               }

               private function resultRecordarContrasena():void
               {
               vsMain.selectedIndex = 2;
               }
             */
             
             private function setLanguage(localeChain:String):void{
				trace("[Login] set Language " + localeChain);
				cursorManager.setBusyCursor();
            	
				pendingLocaleChange = localeChain;
				
				if(localeChain == "ja_JP"){
                	
                	ThemeHandler.getInstance().addEventListener("onFontLoaded", onFontLoaded);
                	ThemeHandler.getInstance().addEventListener("onFontLoadedError", onFontLoadedError);
                	ThemeHandler.getInstance().changeSystemFont("japanese");
                	
                	try{

                			IME.enabled = true;
                			IME.conversionMode = IMEConversionMode.JAPANESE_HIRAGANA

                	}catch(error:Error){
                		trace("[Login] Error setting IME Conversion mode");
                	}

                }else{
                	ThemeHandler.getInstance().addEventListener("onFontLoaded", onFontLoaded);
                	ThemeHandler.getInstance().addEventListener("onFontLoadedError", onFontLoadedError);
                	ThemeHandler.getInstance().changeSystemFont("arialComplete");
                }
             }

             private function onFontLoadedError(evt:Event):void{
             	visible = true;
             	cursorManager.removeBusyCursor();
             	ThemeHandler.getInstance().removeEventListener("onFontLoadedError", onFontLoadedError);
             	Alert.show("Error loading font");
             	
             	//we set the current language and an alternative one in case of missing terms
				ResourceManager.getInstance().localeChain = [ pendingLocaleChange, "en_US" ];
             }

             private function onFontLoaded(evt:Event):void{
             	visible = true;
             	cursorManager.removeBusyCursor();
				
             	ThemeHandler.getInstance().removeEventListener("onFontLoaded", onFontLoaded);
             	ThemeHandler.getInstance().removeEventListener("onFontLoadedError", onFontLoadedError);

				//we set the current language and an alternative one in case of missing terms
             	ResourceManager.getInstance().localeChain = [ pendingLocaleChange, "en_US" ];
             	
             	trace("[Login] test locale: "+ ResourceManager.getInstance().getString("Main", "MONTHS_NAMES") );

             }
             
             //First we try to load a custom logo
             //if no exists, display the default one
             private function displayDefaultImage():void{
             	customLogo.visible = false;
             	customLogo.includeInLayout = false;
             	loginLogoImage.visible = true;
             	loginLogoImage.includeInLayout = true;
             }
        ]]>
    </mx:Script>
    <utils:SmoothImage id="loginLogoImage"
    	visible="false" includeInLayout="false"  
    	creationComplete="{AbicloudUtils.getImageFromStyle('loginLogo',loginLogoImage)}"/>
    <mx:Image id="customLogo" source="themes/base/logo.png" ioError="displayDefaultImage()"/>
    
    <!--<mx:HBox width="100%" height="100%" > -->
    <mx:ViewStack id="vsMain"
        width="100%" height="100%">

        <!-- Login -->
        <mx:VBox 
            width="100%" height="100%"
            horizontalAlign="center"
            verticalAlign="middle"
            verticalGap="5"
            horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <mx:VBox 
                width="180"
                verticalGap="0"
                styleName="MainLoginStyleIntern" horizontalScrollPolicy="off"
                verticalScrollPolicy="off">
                <mx:Label text="{ResourceManager.getInstance().getString('Login', 'LABEL_USER')}"/>
                <mx:TextInput id="tiUsuario"
                    width="100%" height="20"/>
                <mx:Spacer height="10"/>
                <mx:Label text="{ResourceManager.getInstance().getString('Login', 'LABEL_PASSWORD')}"/>
                <mx:TextInput id="tiPasswd"
                    width="100%" height="20"
                    displayAsPassword="true"/>
                <mx:Spacer height="10"/>
                <mx:CheckBox id="cbAutoLogin"
                    height="17"
                    label="{ResourceManager.getInstance().getString('Login', 'LABEL_CHECKBOX_AUTOLOGIN')}"/>
            </mx:VBox>

            <mx:HBox width="100%">
                <!-- FORGOT PASSWORD TEMPORALLY DISABLED
                     <mx:LinkButton label="He olvidado mi contraseña" click="vsMain.selectedIndex = 1" styleName="passwordPerdido"/>
                -->
                <mx:Spacer width="100%"/>
            </mx:HBox>

            <!-- Language Selector -->
            <mx:VBox 
                width="180"
                verticalGap="0"
                styleName="MainLoginStyleIntern" horizontalScrollPolicy="off"
                verticalScrollPolicy="off">
                <mx:Label text="{ResourceManager.getInstance().getString('Login', 'LABEL_LANGUAGE')}"/>
                <mx:ComboBox id="languageCombo"
                    width="100%" height="20"
                    selectedIndex="-1" dataProvider="{languageDP}"
                    labelField="label"
                    change="onChangeLanguage()"/>
            </mx:VBox>
        </mx:VBox>

        <!-- Forgotten password -->
        <mx:VBox 
            width="100%" height="100%"
            paddingTop="8"
            verticalAlign="middle"
            verticalGap="0"
            show="tiEmailRecordar.text=''">
            <mx:Text 
                width="100%"
                text="Introduce la dirección de correo electrónico con la que te registraste y en unos segundos recibirás tus datos de acceso."/>
            <mx:Form width="100%">
                <mx:FormItem 
                    width="100%"
                    label="Email:">
                    <mx:TextInput id="tiEmailRecordar"
                        width="100%"/>
                </mx:FormItem>
            </mx:Form>

            <mx:Spacer height="100%"/>

            <mx:HBox 
                width="100%"
                horizontalAlign="right">
                <mx:Button 
                    label="Cancelar" styleName="loginButton"
                    click="vsMain.selectedIndex = 0"/>
                <mx:Button id="btEnviarContrasenya"
                    label="Enviar" styleName="loginButton"/>
            </mx:HBox>
        </mx:VBox>

        <mx:Canvas 
            width="100%" height="100%">

            <mx:Text 
                width="100%"
                verticalCenter="0"
                text="Se ha enviado un mail con sus datos de acceso"/>

            <mx:Button 
                right="0" bottom="0"
                label="Aceptar"
                click="vsMain.selectedIndex = 0"/>
        </mx:Canvas>

    </mx:ViewStack>
    <!--	</mx:HBox>-->

    <mx:Button 
        height="18"
		label="{ResourceManager.getInstance().getString('Common', 'BUTTON_ACCEPT')}"
        styleName="loginButton"
        click="login()"/>
</mx:VBox>
