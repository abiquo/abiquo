<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<EventMap 
    xmlns="http://mate.asfusion.com/"
    xmlns:mx="http://www.adobe.com/2006/mxml">

    <mx:Script>
        <![CDATA[
            import net.undf.abicloud.controller.FaultHandler;
            import net.undf.abicloud.model.AbiCloudModel;
            import net.undf.abicloud.events.ConfigurationEvent;
            import net.undf.abicloud.business.Services;
            import net.undf.abicloud.utils.ScreenBlocker;


            [Bindable]
            private var services:Services = new Services();
        ]]>
    </mx:Script>


    <!-- ********************************************************************************************************************* -->
    <!-- ConfigurationEvent.ASK_FOR_REGISTRATION_REMINDER_SCREEN ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.ASK_FOR_REGISTRATION_REMINDER_SCREEN}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="mustShowRegistrationReminder"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleAskForRegistrationReminderScreen"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.SEND_REGISTRATION_INFO ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.SEND_REGISTRATION_INFO}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="setRegistrationData"
            arguments="{[AbiCloudModel.getInstance().loginManager.session, event.registration]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleSendRegistrationInfo"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- ConfigurationEvent.GET_REGISTRATION_INFO ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.GET_REGISTRATION_INFO}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="getRegistrationData"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleGetRegistrationInfo"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.SET_REGISTRATION_STATUS_LATER ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.SET_REGISTRATION_STATUS_LATER}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="setRegistrationStatusLater"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleSetRegistrationStatusLater"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.SET_REGISTRATION_STATUS_NO ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.SET_REGISTRATION_STATUS_NO}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="setRegistrationStatusNo"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleSetRegistrationStatusNo"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- ********************************************************************************************************************* -->
    <!-- ConfigurationEvent.ASK_FOR_HEARTBEAT_REMINDER_SCREEN ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.ASK_FOR_HEARTBEAT_REMINDER_SCREEN}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="mustShowRegistrationReminder"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleAskForHeartbeatReminderScreen"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>


    <!-- ConfigurationEvent.GET_HEARTBEAT_STATUS ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.GET_HEARTBEAT_STATUS}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="isHeartbeatEnabled"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleGetHeartbeatStatus"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.SET_HEARTBEAT_STATUS_ENABLED ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.SET_HEARTBEAT_STATUS_ENABLED}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="enableHeartbeat"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleSetHeartbeatStatusEnabled"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.SET_HEARTBEAT_STATUS_DISABLED ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.SET_HEARTBEAT_STATUS_DISABLED}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="disableHeartbeat"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleSetHeartbeatStatusDisabled"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.SET_HEARTBEAT_STATUS_LATER ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.SET_HEARTBEAT_STATUS_LATER}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="setHeartbeatStatusLater"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleSetHeartbeatStatusLater"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.SET_HEARTBEAT_STATUS_NO ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.SET_HEARTBEAT_STATUS_NO}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="setHeartbeatStatusNo"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleSetHeartbeatStatusNo"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.GET_LAST_HEARTBEAT_INFO ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.GET_LAST_HEARTBEAT_INFO}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="getLastHeartbeat"
            arguments="{[AbiCloudModel.getInstance().loginManager.session]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleGetLastHeartbeatInfo"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

    <!-- ConfigurationEvent.GET_LAST_HEARTBEAT_ENTRIES ________________________________________________________________________ -->
    <EventHandlers type="{ConfigurationEvent.GET_LAST_HEARTBEAT_ENTRIES}">

        <!-- Blocking screen -->
        <InlineInvoker method="ScreenBlocker.blockScreen"/>

        <!-- Make call to the server here -->

        <RemoteObjectInvoker instance="{services.configurationService}"
            method="getLastHeartbeat"
            arguments="{[AbiCloudModel.getInstance().loginManager.session,
						     			  event.rows]}">

            <resultHandlers>
                <MethodInvoker generator="{ConfigurationResultHandler}"
                    method="handleGetLastHeartbeatEntries"
                    arguments="{[resultObject]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>
            </resultHandlers>

            <faultHandlers>
                <MethodInvoker generator="{FaultHandler}"
                    method="handleFault"
                    arguments="{[fault]}"/>

                <!-- Unblock screen -->
                <InlineInvoker method="ScreenBlocker.unblockScreen"/>

            </faultHandlers>

        </RemoteObjectInvoker>

    </EventHandlers>

</EventMap>
