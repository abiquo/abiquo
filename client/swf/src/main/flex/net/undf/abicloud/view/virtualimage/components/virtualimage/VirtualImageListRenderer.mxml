<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<mx:Canvas 
    width="350" height="75"
    backgroundAlpha="0"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:utils="net.undf.abicloud.utils.*">

    <mx:Script>
        <![CDATA[
        	import net.undf.abicloud.utils.AbicloudUtils;
        	import net.undf.abicloud.events.virtualimage.VirtualImageEvent;
            import net.undf.abicloud.business.managers.virtualimage.VirtualImageManager;
            import net.undf.abicloud.vo.virtualimage.VirtualImage;
            import net.undf.abicloud.model.AbiCloudModel;
            import mx.resources.ResourceManager;
            import net.undf.abicloud.vo.virtualappliance.NodeVirtualImage;

            [Bindable]
            private var _virtualImage:VirtualImage;

            override public function set data(value:Object):void
            {                
                super.data = value;
                
                selectedToStatefulCheckbox.selected = false;
                if(data is VirtualImage){
                	this._virtualImage = data as VirtualImage;
                	if(this._virtualImage.master == null){
                		selectedToStatefulCheckbox.selected = true;
                		onSelectedToStatefulCheckboxChange();
                	}
                }
            }

            private function onSelectedToStatefulCheckboxChange():void
            {
              	var virtualImageEvent:VirtualImageEvent;
				if(selectedToStatefulCheckbox.selected){
					virtualImageEvent = new VirtualImageEvent(VirtualImageEvent.VIRTUAL_IMAGE_CHECKED);
					
				}else{
					virtualImageEvent = new VirtualImageEvent(VirtualImageEvent.VIRTUAL_IMAGE_UNCHECKED);
				}
				virtualImageEvent.virtualImage = this._virtualImage;
				dispatchEvent(virtualImageEvent);
            }
        ]]>
    </mx:Script>

    <utils:ImageDefault id="nodeIcon"
        width="65"
        left="5" top="5" bottom="5"
        source="{this._virtualImage.iconUrl}"
        scaleContent="true"
        defaultImagePath="{VirtualImageManager.DEFAULT_ICON_IMAGE_PATH}"/>

    <mx:Label id="nameLabel"
        left="80" top="5"
        fontSize="12"
        fontWeight="bold"
        maxWidth="200" text="{this._virtualImage.name}" truncateToFit="true"
        toolTip="{this._virtualImage.name}"/>

    <mx:Grid
       verticalGap="0" 
        left="80" top="22">
        <mx:GridRow>
            <mx:GridItem>
                <mx:Label id="ramLabel"
                   fontSize="12"
                   maxWidth="200"
                   text="{ResourceManager.getInstance().getString('Infrastructure', 'TEXTINPUT_LABEL_RAM') + ': '+this._virtualImage.ramRequired.toString() + ' MB'}"
                   truncateToFit="true" toolTip="{this._virtualImage.name}"/>
            </mx:GridItem>
            <mx:GridItem>
                <mx:Label id="userLabel"
                    fontSize="12"
                    maxWidth="200"
                    text="{ResourceManager.getInstance().getString('Infrastructure', 'LABEL_USER') + ': '+this._virtualImage.creationUser}"
                    truncateToFit="true" toolTip="{this._virtualImage.creationUser}"/>
            </mx:GridItem>
        </mx:GridRow>
        <mx:GridRow>
            <mx:GridItem>
                <mx:Label id="cpuLabel"
                   fontSize="12"
                   maxWidth="200"
                   text="{ResourceManager.getInstance().getString('Infrastructure', 'TEXTINPUT_LABEL_CPU') + ': '+this._virtualImage.cpuRequired}"
                   truncateToFit="true" toolTip="{this._virtualImage.name}"/>
            </mx:GridItem>
            <mx:GridItem>
                <mx:Label id="creationLabel"
                    fontSize="12"
                    maxWidth="200"
                    text="{ResourceManager.getInstance().getString('Infrastructure', 'LABEL_CREATION_DATE') + ': '+AbicloudUtils.formatDate(this._virtualImage.creationDate,false)}"
                    truncateToFit="true" toolTip="{AbicloudUtils.formatDate(this._virtualImage.creationDate,false)}"/>
            </mx:GridItem>
        </mx:GridRow>
    </mx:Grid>

    <mx:Label id="masterLabel"
        right="25" top="5"
        fontSize="12"
        maxWidth="200"
        text="Master"
        visible="{this._virtualImage.master == null}"
        truncateToFit="true" toolTip="{this._virtualImage.name}"/>
        
    <mx:CheckBox id="selectedToStatefulCheckbox"
        right="5" top="5"
        selected="false"
        change="onSelectedToStatefulCheckboxChange()"/>

    <mx:HRule 
        width="100%"
        bottom="0"/>
</mx:Canvas>
