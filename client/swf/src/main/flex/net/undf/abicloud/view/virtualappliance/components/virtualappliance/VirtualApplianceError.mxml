<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<AbiCloudPopUp 
    xmlns="net.undf.abicloud.view.general.*"
    verticalScrollPolicy="off" horizontalScrollPolicy="off"
    minWidth="400"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    titleText="@Resource(bundle='VirtualAppliance', key='POPUP_TITLE_VIRTUALAPPLIANCEERROR')" 
    xmlns:virtualappliance="net.undf.abicloud.view.virtualappliance.components.virtualappliance.*">


    <mx:Metadata>
		[Event(name="virtualApplianceSelectorClose", type="flash.events.Event")]
	</mx:Metadata>

    <mx:Script>
        <![CDATA[
            import mx.managers.PopUpManager;
            import net.undf.abicloud.vo.virtualappliance.VirtualAppliance;
            import net.undf.abicloud.events.VirtualApplianceEvent;
            import mx.events.ItemClickEvent;
            import mx.binding.utils.BindingUtils;
            import net.undf.abicloud.model.AbiCloudModel;
            import mx.collections.ArrayCollection;

            [Bindable]
            private var _virtualAppliance:VirtualAppliance;
            
            public function init(virtualAppliance:VirtualAppliance):void
            {
            	this._virtualAppliance = virtualAppliance;
            	
            	//Getting the list of nodes for this virtual appliance
                var virtualApplianceEvent:VirtualApplianceEvent = new VirtualApplianceEvent(VirtualApplianceEvent.GET_VIRTUALAPPLIANCE_NODES);
                virtualApplianceEvent.virtualAppliance = this._virtualAppliance;
                dispatchEvent(virtualApplianceEvent);
                
                //Let's know when the nodes are available
                AbiCloudModel.getInstance().virtualApplianceManager.addEventListener(VirtualApplianceEvent.VIRTUAL_APPLIANCE_NODES_RETRIEVED,
                                                                                             onVirtualApplianceNodesRetrieved);
            }
            
            private function onVirtualApplianceNodesRetrieved(event:VirtualApplianceEvent):void
            {
                //Unregistering event
                AbiCloudModel.getInstance().virtualApplianceManager.removeEventListener(VirtualApplianceEvent.VIRTUAL_APPLIANCE_NODES_RETRIEVED,
                                                                                        onVirtualApplianceNodesRetrieved);

                this._virtualAppliance = event.virtualAppliance;

                //We update the list of nodes
                nodeStatuses.nodesList.dataProvider = this._virtualAppliance.nodes;
            }

            /**
             * Announces that user wants to close this component without interact with it
             **/
            private function closeVirtualApplianceSelector():void
            {
                dispatchEvent(new Event("virtualApplianceErrorClose"));
            }
        ]]>
    </mx:Script>


    <virtualappliance:NodeStatuses 
        id="nodeStatuses" 
        width="100%"
        height="100%"
        virtualAppliance="{this._virtualAppliance}"
        title="@Resource(bundle='VirtualAppliance', key='LABEL_STATUS')"/>

    <mx:Button id="closeButton"
        height="18"
        label="@Resource(bundle='Common', key='BUTTON_CLOSE')"
        styleName="AlternativeButton"
        click="closeVirtualApplianceSelector()"/>
    <mx:Spacer height="3"/>
</AbiCloudPopUp>
