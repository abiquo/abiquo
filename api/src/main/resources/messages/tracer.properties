####################
## Infrastructure ##
####################

# Datacenter
datacenter.repeated = Another datacenter with the name {0} already exists; please, choose a different name
datacenter.created = Datacenter {0} has been created in {1}
datacenter.modified = Datacenter '{0}' has been modified [Name: {1}, Situation: {2}]
datacenter.removed = Datacenter {0} deleted
datacenter.withStorageDevices = Cannot delete datacenter with storage devices associated
datacenter.withVDC = Cannot delete datacenter with virtual datacenters associated
datacenter.createError = Datacenter '{0}': {1}

#RemoteServices
remoteServices.down = The Remote Service is down or not configured
remoteServices.updated = {0} updated
remoteServices.deleted = {0} deleted
remoteServices.created = {0} created in {1} for datacenter {2}

#VirtualSystemMonitor
vsm.subscriber.error = There was a problem while subscribing deployed Virtual Machines to VSM {0}

#Rack
rack.duplicatedname = Rack with duplicated name {0}
rack.created = Rack '{0}' has been created succesfully
rack.updated = Rack '{0}' has been modified [Name: {1}, Short description: {2}, HA enabled: {3}]
rack.deleted = Rack {0} deleted

# Machine
machine.created = Machine {0} [ip: {1} type: {2} state: "{3}] created succesfully
machine.deleted = Machine {0} + "[ip: {1} type: {2} state: {3}] deleted succesfully

####################
## Virtual Image  ##
####################

# Category
category.created = A new category has been created with the name {0}
category.updated = Category {0} updated
category.removed = Removing category {0}

#Template
templateDefinitionList.updated = TemplateDefinitionList {0} updated
templateDefinitionList.deleted = Removing ovf package list {0}

#VirtualMachineTemplate
virtualMachineTemplate.convertedToMaster = Virtual Machine Template '{0}' has been converted to a master template
virtualMachineTemplate.deleted = Virtual Machine Template '{0}' has been deleted

####################
##     Cloud      ##
####################

#VirtualApplianceService
virtualAppliance.deleteErrorValidations = Delete of the virtual appliance with name {0} due validations
virtualAppliance.deployError = The virtual machine threw and error. Nevertheless we continue with next virtual machine. Unexpected Error: {0}
virtualAppliance.deleteError = Delete of the virtual appliance with name {0} failed with due to an invalid state. Should be NOT_DEPLOYED, but was {1}
virtualAppliance.deleteErrorNotManagedImages = Delete of the virtual appliance with name {0} failed with due to having non managed images and not forcing the delete
virtualAppliance.deleted = Delete of the virtual appliance with name {0} succeeded

#virtualMachine
virtualMachine.deleteFailed = Delete of the virtual appliance with name {0} failed with due to an invalid state. Should be NOT_DEPLOYED, but was {1}
virtualMachine.deleteFailedInvalidNotDeployed = Delete of the virtual appliance with name {0} failed with due to an invalid state. Should be NOT_DEPLOYED, but was successful!
virtualMachine.deploy = Unexpected error deploying virtual machine {0}
virtualMachine.deployedOrAllocated = The Virtual Machine is already deployed or Allocated.
virtualMachine.cannotUndeployed = The Virtual Machine is in a state in which cannot be undeployed.
virtualMachine.enqueued = Undeploy of the virtual machine with name {0} enqueued successfully!
virtualMachine.enqueuedTarantino = The enqueuing in Tarantino was OK.
virtualMachine.undeployError = The machine is should be now in state UNKNOWN. Unexpected Error: {0}
virtualMachine.applyStateError = Could not apply state {0} to virtual machine {1}
virtualMachine.applyVirtualMachineEnqueued = Applying the state of the virtual machine with name {0} enqueued successfully!
virtualMachine.applyVirtualMachineTarantinoEnqueued = The enqueuing in Tarantino was OK. The virtual machine is locked
virtualMachine.notManagedVMDeleted = Virtual Machines not managed by host from '{0}' have been deleted
virtualMachine.configured = Virtual Machine '{0}' has updated its default configuration
virtualMachine.resetVirtualMachineError = Could not reset virtual machine {0}
virtualMachine.resetVirtualMachineEnqueued = Applying the reset of the virtual machine with name {0} enqueued successfully!
virtualMachine.resetVirtualMachineTarantinoEnqueued = The enqueuing in Tarantino was OK. The virtual machine is locked
virtualMachine.virtualMachinesnapshotError = Could not start the snapshot process for virtual machine {0}
virtualMachine.virtualMachineSnapshotEnqueued = Applying the snapshot of the virtual machine with name {0} enqueued successfully!
virtualMachine.virtualMachineSnapshotTarantinoEnqueued = The enqueuing in Tarantino was OK. The virtual machine is locked
virtualMachine.delete = The Virtual Machine was deleted successfully
virtualMachine.reconfigureError = Could not reconfigure virtual machine {0}

#Networks
privateVlan.created = A new internal VLAN with in a private range with name '{0}' has been created in {1}
privateVlan.deleted = The internal VLAN with name '{0}' has been deleted.
privateVlan.updated = The Private VLAN with name '{0}' has been modified in Virtual Datacenter {1}
nic.released = Virtual Machine '{0}' has released the NIC associated to IP Address '{1}' from VLAN '{2}'
nic.reordered = NICs from Virtual Machine with name '{0}' have been reordered
vlan.default = Internal VLAN with name '{0}' has been marked as the default one in Virtual Datacenter '{1}'.

#Storage
hardDisk.created = A new hard disk VLAN of {0} MB has been created as a resource in VirtualDatacenter '{1}'.
hardDisk.deleted = The hard disk resource '{0}' and size of {1} MB has been deleted from VirtualDatacenter '{2}'.
hardDisk.assigned = The hard disk resource '{0}' and size of {1} MB has been assigned to virtual machine '{2}'.
hardDisk.released = The hard disk resource '{0}' and size of {1} MB has been released from virtual machine '{2}'.

####################
##   Tarantino    ##
####################

#Tarantino
tarantino.sendError = Failed to enqueue task in Tarantino. Rabbitmq might be down or not configured. The error message was {0}
tarantino.taskEnqueued = Task enqueued successfully to Tarantino
tarantino.closeProducer = Error closing the producer channel with error: {0}
tarantino.deployVMError = The enqueuing in Tarantino failed. Rabbitmq might be down or not configured. The error message was {0}
tarantino.undeployVMError = The enqueuing in Tarantino failed. Rabbitmq might be down or not configured. The error message was {0}
tarantino.applyChangesVMError = The enqueuing in Tarantino failed. Rabbitmq might be down or not configured. The error message was {0}
tarantino.reconfigureVMError = The enqueuing in Tarantino failed. Rabbitmq might be down or not configured. The error message was {0}

################################
##   Users and Enterprises    ##
################################

#User
user.created = User {0} has been created [Enterprise: {1} Name: {2} Surname: {3} Role: {4}]
user.modified = User {0} has been modified [Enterprise: {1} Name: {2} Surname: {3} Role: {4}]
user.deleted = User {0} has been deleted [Enterprise: {1} Name: {2} Surname: {3} Role: {4}]
