<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource" />
        <property name="failEarlyOnGlobalRollbackOnly" value="true" />
    </bean>
    <bean id="openEntityManagerInterceptor"
        class="com.abiquo.api.spring.jpa.OpenEntityManagerInterceptorWithFilters">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <bean id="abstractInterceptedBean" class="org.springframework.aop.framework.ProxyFactoryBean"
        abstract="true">
        <property name="interceptorNames">
            <list>
                <value>openEntityManagerInterceptor</value>
            </list>
        </property>
    </bean>
    <!-- provide annotation driven transactions in methods -->
    <tx:annotation-driven />
    <bean id="resourceRegistrar" class="org.apache.wink.spring.Registrar">
        <property name="classes">
            <set value-type="java.lang.Class">
                <value>com.abiquo.api.exceptions.mapper.APIExceptionMapper</value>
                <value>com.abiquo.api.exceptions.mapper.AccessDeniedExceptionMapper</value>
                <value>com.abiquo.api.exceptions.mapper.ConstraintViolationExceptionMapper</value>
                <value>com.abiquo.api.exceptions.mapper.PersistenceExceptionMapper</value>
                <value>com.abiquo.api.exceptions.mapper.SocketTimeoutExceptionMapper</value>
                <value>com.abiquo.api.exceptions.mapper.RedisExceptionMapper</value>
            </set>
        </property>
        <!--
            Is mandatory to place the parent before the child. Eg Volumes before Volume. Or
            autowired will fail.
        -->
        <property name="instances">
            <set>
                <ref bean="datacentersResource" />
                <ref bean="datacenterResource" />
                <ref bean="racksResource" />
                <ref bean="rackResource" />
                <ref bean="machinesResource" />
                <ref bean="machineResource" />
                <ref bean="remoteServicesResource" />
                <ref bean="remoteServiceResource" />
                <ref bean="enterprisesResource" />
                <ref bean="enterpriseResource" />
                <ref bean="rolesResource" />
                <ref bean="roleResource" />
                <ref bean="privilegesResource" />
                <ref bean="privilegeResource" />
                <ref bean="usersResource" />
                <ref bean="userResource" />
                <ref bean="templateDefinitionListsResource" />
                <ref bean="templateDefinitionListResource" />
                <ref bean="templateDefinitionsResource" />
                <ref bean="templateDefinitionResource" />
                <ref bean="virtualDatacentersResource" />
                <ref bean="virtualDatacenterResource" />
                <ref bean="privateNetworksResource" />
                <ref bean="privateNetworkResource" />
                <ref bean="ipAddressesResource" />
                <ref bean="pricingTemplatesResource" />
                <ref bean="pricingTemplateResource" />
                <!-- -->
                <ref bean="virtualAppliancesResource" />
                <ref bean="virtualApplianceResource" />
                <ref bean="virtualMachinesResource" />
                <ref bean="virtualMachineResource" />
                <ref bean="virtualMachineNetworkConfigurationResource" />
                <ref bean="virtualMachineStorageConfigurationResource" />
                <ref bean="datacenterRepositoriesResource" />
                <ref bean="datacenterRepositoryResource" />
                <ref bean="virtualMachineTemplatesResource" />
                <ref bean="virtualMachineTemplateResource" />
                <ref bean="datastoresResource" />
                <ref bean="datastoreResource" />
                <!-- Configuration -->
                <ref bean="systemPropertiesResource" />
                <ref bean="systemPropertyResource" />
                <ref bean="categoriesResource" />
                <ref bean="categoryResource" />
                <ref bean="diskFormatTypeResource" />
                <ref bean="diskFormatTypesResource" />
                <ref bean="hypervisorTypeResource" />
                <ref bean="hypervisorTypesResource" />

                <!-- Login -->
                <ref bean="loginResource" />
                <!--  -->
                <ref bean="virtualMachinesInfrastructureResource" />
                <ref bean="virtualMachineInfrastructureResource" />
                <ref bean="disksResource" />
                <ref bean="diskResource" />
            </set>
        </property>
    </bean>
    <bean id="wink.customPropertiesFactory" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:wink.properties</value>
            </list>
        </property>
    </bean>
    <bean id="wink.placeholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="order" value="1" />
        <property name="propertiesArray">
            <list>
                <props>
                    <prop key="winkPropertiesFactory">wink.customPropertiesFactory</prop>
                </props>
            </list>
        </property>
    </bean>
    <bean class="com.abiquo.api.spring.BeanLoader" factory-method="getInstance" />
</beans>
