<?xml version="1.0" encoding="UTF-8"?>
<project>
    <!-- -->
    <!-- POM RELATIONSHIPS -->
    <!-- -->
    <!-- Maven Coordinates -->
    <modelVersion>4.0.0</modelVersion>
    <artifactId>database</artifactId>
    <!-- Inheritance -->
    <parent>
        <groupId>com.abiquo.abicloud</groupId>
        <artifactId>platform</artifactId>
        <version>2.0-HF1-SNAPSHOT</version>
    </parent>
    <!-- -->
    <!-- PROJECT INFORMATION -->
    <!-- -->
    <name>Database</name>
    <url>http://www.abiquo.com</url>
    <inceptionYear>2009</inceptionYear>
    <licenses>
        <license>
            <name>LGPL</name>
            <url>http://www.gnu.org/licenses/lgpl.html</url>
        </license>
    </licenses>
    <!-- -->
    <!-- DB PROPERTIES -->
	<properties>
		<!--TODO: Deprecate unused properties-->
		<previousVersion>2.0-ga</previousVersion>
		<nextVersionForDelta>2.0.0-HF1_new</nextVersionForDelta>
		<schemaPath>schema</schemaPath>
		<dataPath>data</dataPath>
		<procPath>procedures</procPath>
		<triggersPath>.</triggersPath>
		<jdbcUrl>jdbc:mysql://${devmachine}:3306/kinton</jdbcUrl>		
		<mysqlDriverVersion>5.1.6</mysqlDriverVersion>		
	</properties>
    <!-- -->
		<dependencies>
		 <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <!-- Replace with the version of the MySQL driver you want to use -->
            <version>${mysqlDriverVersion}</version>
        </dependency>
		<dependency>
		<groupId>org.liquibase</groupId>
		<artifactId>liquibase-core</artifactId>
		<version>2.0.3</version>
		</dependency>
		</dependencies>
            
    <!-- -->
    <!-- BUILD SETTINGS -->
    <!-- -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

	<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
			<execution>
                        <id>cleaningDB</id>
			<!-- Liquibase requires schema to be created before starting -->
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mysql</executable>
                            <arguments>
                                <argument>-h${devmachine}</argument>
                                <argument>-uroot</argument>
                                <argument>-proot</argument>
                                <argument>&lt;recreatekinton.sql</argument>
                            </arguments>
                        </configuration>
                    </execution>
	<execution>
                        <id>cleaningTestDB</id>
			<!-- Liquibase requires schema to be created before starting -->
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mysql</executable>
                            <arguments>
                                <argument>-h${devmachine}</argument>
                                <argument>-uroot</argument>
                                <argument>-proot</argument>
                                <argument>&lt;recreatekintontest.sql</argument>
                            </arguments>
                        </configuration>
                    </execution>
</executions>
	</plugin>
	<plugin>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-maven-plugin</artifactId>
          <version>2.0.3</version>
          <configuration>
		<driver>com.mysql.jdbc.Driver</driver>
		<classpath>/opt/tomcat/lib/mysql-connector-java-5.1.6.jar</classpath>
		<changeLogFile>kinton_master_changelog.xml</changeLogFile>
		<username>root</username>
		<password>root</password>
		<defaultSchemaName>kinton</defaultSchemaName>
		<url>jdbc:mysql://${devmachine}:3306/kinton</url>
		<!-- TODO: Move all generated Scripts to /target -->
		<migrationSqlOutputFile>kinton_liquibase_generated.sql</migrationSqlOutputFile>
		<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
		<logLevel>warning</logLevel>
		<verbose>false</verbose>
	</configuration>
	<executions>
            <execution>
		<id>sqlschemascript</id>
              <!-- will generate ${migrationSqlOutputFile}.sql  -->
	      <!-- TODO: This step shouldn't be necessary on install phase -->
	      <phase>generate-resources</phase>
              <goals>
              <goal>updateSQL</goal>
              </goals>
		</execution>
		<!-- generate delta SCRIPTS is also needed -->
		<execution>
		<id>sqlDeltaScript</id>
              <!-- will generate ${migrationSqlOutputFile}.sql  -->
	      <!-- TODO: This step shouldn't be necessary on install phase -->
	      <phase>generate-resources</phase>
              <goals>
              <goal>updateSQL</goal>
              </goals>
		<configuration>
		<migrationSqlOutputFile>kinton_delta_liquibase_generated.sql</migrationSqlOutputFile>
		<!-- TODO delete _new suffix -->
		<changeLogFile>delta/${nextVersionForDelta}/deltachangelog.xml</changeLogFile>
          </configuration>
		</execution>

		<execution>
		<id>testing</id>
	      <phase>test</phase>
		<configuration>
		<defaultSchemaName>kinton_test</defaultSchemaName>
	<!-- TODO: Move all generated Scripts to /target -->
		<migrationSqlOutputFile>kinton_test_liquibase_generated.sql</migrationSqlOutputFile>
          </configuration>
              <goals>
                <goal>update</goal>
              </goals>
		</execution>
	<execution>
	<id>apply2DB</id>
	      <phase>install</phase>
              <goals>
                <goal>update</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        </plugins>
<!-- Is this necessary?
        <filters>
            <filter>../system-properties/src/main/filters/${env}-${env.family}.properties</filter>
        </filters>
-->
    </build>
</project>
